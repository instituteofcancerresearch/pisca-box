##########################################################################

### BUILD IMAGE
# docker build -t pisca-branch-master -f Dockerfile_b_master --build-arg SSH_PRIVATE_KEY="$(cat ~/.ssh/id_rsa)" .
### TEST IMAGE
# docker run -v ~/dev/beast-icr/pisca-branch:/mnt --rm pisca-branch-master flipflop.xml
### UPLOAD TO DOCKER
# docker tag pisca-branch-master rachelicr/pisca-branch-master
# docker push rachelicr/pisca-branch-master
### Pull DOWN FROM DOCKER and run
# docker pull rachelicr/pisca-branch-master
# docker run -v ~/your/path/to/xml/file:/mnt --rm pisca-branch-master your.xml

##########################################################################

# this is our first build stage, it will not persist in the final image
FROM ubuntu as intermediate
#FROM ubuntu

# install git
RUN apt-get update
RUN apt-get install -y git

# add credentials on build to link to github
ARG SSH_PRIVATE_KEY
RUN mkdir /root/.ssh/
RUN echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa && \
    chmod 600 /root/.ssh/id_rsa

# make sure your domain is accepted
RUN touch /root/.ssh/known_hosts
RUN ssh-keyscan github.com >> /root/.ssh/known_hosts

RUN git clone git@github.com:pbousquets/beast-mcmc-flipflop.git

#FROM ubuntu
FROM python:3.12-rc-slim-bookworm
# copy the repository form the previous image
WORKDIR /project
COPY . /project

COPY --from=intermediate /beast-mcmc-flipflop /project/beast-mcmc-flipflop

# Install software 
RUN apt-get update -y
RUN apt-get install -y openssh-client
RUN apt-get install -y wget

# Set up environment variables
ENV JAVA_HOME=/project/jdk-20.0.2
ENV PATH=$JAVA_HOME/bin:$PATH
ENV PATH=/project/beast-mcmc-flipflop/release/Linux/Phyfumv1.0_RC1/bin:$PATH

# install the correct version of java!!!!!
### RUN wget -O jdk.tar.gz https://download.oracle.com/java/20/latest/jdk-20_linux-x64_bin.tar.gz
RUN wget -O jdk.tar.gz https://download.oracle.com/java/20/archive/jdk-20.0.2_linux-x64_bin.tar.gz
RUN tar zxvf jdk.tar.gz
## makes directory jdk-20.0.2

# install Ant
#Create Ant Dir in Docker container
RUN mkdir -p /opt/ant/
#Download Ant 1.9.8
RUN wget http://archive.apache.org/dist/ant/binaries/apache-ant-1.9.8-bin.tar.gz -P /opt/ant
#Unpack Apache Ant for Java builds
RUN tar -xvzf /opt/ant/apache-ant-1.9.8-bin.tar.gz -C /opt/ant/
# Remove tar file
RUN rm -f /opt/ant/apache-ant-1.9.8-bin.tar.gz
#Add Sonarqube lib
RUN wget http://downloads.sonarsource.com/plugins/org/codehaus/sonar-plugins/sonar-ant-task/2.3/sonar-ant-task-2.3.jar -P /opt/ant/apache-ant-1.9.8/lib/
#Set Ant Home in Docker container for Jenkins
ENV ANT_HOME=/opt/ant/apache-ant-1.9.8
#Set Ant Params in Docker for Jenkins
ENV ANT_OPTS="-Xms256M -Xmx512M"
#Update Path
ENV PATH="${PATH}:${HOME}/bin:${ANT_HOME}/bin"

# Install beast
#RUN cd /project/beast-mcmc-flipflop
#RUN ant linux
RUN cd /project/beast-mcmc-flipflop && ant linux

####### Commands to run python application #######################
ENTRYPOINT ["python3", "/project/app/app.py"]
################################################################
