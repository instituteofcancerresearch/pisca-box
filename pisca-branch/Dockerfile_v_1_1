##########################################################################

### BUILD IMAGE
# docker build -t rachelicr/pisca-run -f Dockerfile_v_1_1 .
# docker build -t icrsc/pisca-run -f Dockerfile_v_1_1 .
### TEST IMAGE with relative path
# docker run -v xml:/mnt --rm icrsc/pisca-run validation.xml

### UPLOAD TO DOCKER
# docker tag rachelicr/pisca-run rachelicr/pisca-run:v01
# docker push rachelicr/pisca-run
# docker push rachelicr/pisca-run:v01

### Pull DOWN FROM DOCKER and run
# docker pull rachelicr/pisca-run
# docker run -v ~/dev/beast-icr/pisca-branch:/mnt --rm rachelicr/pisca-run validation.xml
# docker run -v ~/your/path/to/xml/file:/mnt --rm rachelicr/pisca-run your.xml


# singularity run -B ~/dev/beast-icr/pisca-branch:/mnt docker://rachelicr/pisca-run validation.xml
##########################################################################

# install operating sustem
FROM python:3.12-rc-slim-bookworm

WORKDIR /project
COPY . /project

# Install software 
RUN apt-get update -y
RUN apt-get install -y openssh-client
RUN apt-get install -y wget

# Set up environment variables
ENV JAVA_HOME=/project/jdk-20.0.2
ENV PATH=$JAVA_HOME/bin:$PATH
ENV PATH=/project/BEASTv1.8.4/bin:$PATH

# install the correct version of java!!!!!
### RUN wget -O jdk.tar.gz https://download.oracle.com/java/20/latest/jdk-20_linux-x64_bin.tar.gz
RUN wget -O jdk.tar.gz https://download.oracle.com/java/20/archive/jdk-20.0.2_linux-x64_bin.tar.gz
RUN tar zxvf jdk.tar.gz
## makes directory jdk-20.0.2

# Install beast
RUN wget -O beast.tgz https://github.com/beast-dev/beast-mcmc/releases/download/v1.8.4/BEASTv1.8.4.tgz
RUN tar -xvzf beast.tgz
## makes directory BEASTv1.8.4

# Install pisca
RUN wget -O pisca.tgz https://github.com/adamallo/PISCA/releases/download/v1.1/PISCAv1.1.tgz
RUN tar -xvzf pisca.tgz
## makes directory PISCAv1.1 ## note that cd has to be inline with other commands
RUN chmod +x /project/PISCAv1.1/install.sh
RUN cd /project/PISCAv1.1/ && ./install.sh /project/BEASTv1.8.4/

# make a dir for the tmp files
RUN mkdir /project/xml

####### Commands to run python application #######################
ENTRYPOINT ["python3", "/project/app/app.py"]
################################################################
